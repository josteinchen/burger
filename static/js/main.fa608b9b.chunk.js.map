{"version":3,"sources":["store/actions/actionTypes.js","shared/utility.js","hoc/Auxiliary.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","store/actions/index.js","components/Burger/BurgerIngredient/BurgerIngredient.module.css","axios-orders.js","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Navigation/toolbar/Toolbar.module.css","components/UI/Button/Button.js","components/Navigation/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","components/Logo/Logo.js","components/Navigation/NavigationItem/NaviagationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Auth/Logout/Logout.js","hoc/asyncComponent/asyncComponent.js","App.js","serviceWorker.js","index.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDER_START","FETCH_ORDER_SUCCESS","FETCH_ORDER_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","Aux","props","children","addIngredient","name","type","actionTypes","ingredientName","removeIngredient","initIngredients","dispatch","axios","get","then","response","ingredients","data","catch","error","fetchIngredientsFailed","purchaseBurger","orderData","token","post","id","orderId","purchaseBurgerSuccess","purchaseBurgerFail","purchaseInit","fetchOrders","userId","queryParams","res","orders","key","push","err","authSuccess","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","auth","email","password","isSugnup","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","setAuthRedirectPath","path","authCheckState","getItem","module","exports","instance","create","baseURL","Backdrop","show","className","classes","onClick","clicked","Modal","nextPro","nextState","this","modalClosed","style","transform","opacity","Component","Button","disabled","btnType","join","Spinner","Loader","withErrorHandler","WrappedComponent","state","errorConfirmedHandler","setState","reqInterceptor","interceptors","request","use","req","resInterceptor","eject","message","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","proTypes","ProTypes","string","isRequired","Burger","transformedIngredients","Object","keys","map","igKey","Array","_","i","reduce","arr","el","concat","initialState","totalPrice","building","INGREDIENT_PRICES","salad","cheese","meat","bacon","action","updatedIngredient","updatedState","setIngredients","reducer","loading","purchased","purchaseBurgerStart","newOrder","fetchOrderStart","fetchOrderSuccess","fetchOrderFail","authRedirectPath","authStart","authFail","authLogout","Logo","src","burgerLogo","alt","NaviagationItem","NavigationItem","to","link","exact","activeClassName","active","NavigationItems","isAuthenticated","DrawerToggle","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","SideDrawer","attachedClasses","Close","open","Open","closed","Layout","showSideDrawer","SideDrawerClosedHandler","sideDrawerToggleHandler","prevStae","content","connect","BuildControl","Label","label","Less","ingredientRemoved","disable","More","ingredientAdded","controls","BuildControls","price","toFixed","OrderButton","purchaseable","ordered","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","BurgerBuilder","purchasing","updatedPurchaseState","updatedIngredients","sum","purchaseHandler","onSetRedirectPath","history","purchaseCancelHandler","purcheseContinueHandler","onInitPurchase","onInitIngredients","disableInfo","ings","orderSummary","burger","onIngredientAdded","onIngredientRemoved","burgerBuilder","ingName","actions","Logout","onLogout","asyncComponent","importComponent","component","cmp","default","C","asyncCheckout","asynOrders","asynAuth","App","onTryAutoSignup","routes","withRouter","Boolean","window","location","hostname","match","rootReducer","combineReducers","burgerBuilderReducer","order","orderReducer","authReducer","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mGAAA,giBAAO,IAAMA,EAAiB,iBACjBC,EAAoB,oBACpBC,EAAkB,kBAClBC,EAA2B,2BAE3BC,EAAwB,wBACxBC,EAA0B,0BAC1BC,EAAuB,uBACvBC,EAAgB,gBAEhBC,EAAoB,oBACpBC,EAAsB,sBACtBC,EAAmB,mBAEnBC,EAAa,aACbC,EAAe,eACfC,EAAY,YACZC,EAAc,cAEdC,EAAyB,0B,4UCnB/B,IAAMC,EAAe,SAACC,EAAWC,GACtC,O,yVAAO,CAAP,GACKD,EADL,GAEKC,IAIMC,EAAgB,SAACC,EAAOC,GACnC,IAAIC,GAAU,EACd,OAAKD,IAIDA,EAAME,WACRD,EAA2B,KAAjBF,EAAMI,QAAiBF,GAG/BD,EAAMI,YACRH,EAAUF,EAAMM,QAAUL,EAAMI,WAAaH,GAG3CD,EAAMM,YACRL,EAAUF,EAAMM,QAAUL,EAAMM,WAAaL,GAExCA,K,oCCtBMM,IAFH,SAAAC,GAAK,OAAIA,EAAMC,W,qDCGdC,EAAgB,SAAAC,GAC3B,MAAO,CACLC,KAAMC,IACNC,eAAgBH,IAIPI,EAAmB,SAAAJ,GAC9B,MAAO,CACLC,KAAMC,IACNC,eAAgBH,IAWPK,EAAkB,WAC7B,OAAO,SAAAC,GACLC,IACGC,IAAI,iEACJC,MAAK,SAAAC,GAXkB,IAAAC,EAYtBL,GAZsBK,EAYED,EAASE,KAXhC,CACLX,KAAMC,IACNS,YAAaA,QAWVE,OAAM,SAAAC,GAAK,OAAIR,EAASS,UAIlBA,EAAyB,WACpC,MAAO,CACLd,KAAMC,M,ikBClCH,IAqBMc,EAAiB,SAACC,EAAWC,GACxC,OAAO,SAACZ,GACNA,EAPK,CACLL,KAAMC,MAONK,IACGY,KAAK,qBAAuBD,EAAOD,GACnCR,MAAK,SAACC,GACLJ,EA3B6B,SAACc,EAAIH,GACxC,MAAO,CACLhB,KAAMC,IACNmB,QAASD,EACTH,UAAWA,GAuBEK,CAAsBZ,EAASE,KAAKZ,KAAMiB,OAEpDJ,OAAM,SAACC,GACNR,EAtB0B,SAACQ,GACjC,MAAO,CACLb,KAAMC,IACNY,MAAOA,GAmBMS,CAAmBT,SAKvBU,EAAe,WAC1B,MAAO,CACLvB,KAAMC,MAwBGuB,EAAc,SAACP,EAAOQ,GACjC,OAAO,SAACpB,GACNA,EAPK,CACLL,KAAMC,MAON,IAAMyB,EACJ,SAAWT,EAAQ,8BAAgCQ,EAAS,IAC9DnB,IACGC,IAAI,eAAiBmB,GACrBlB,MAAK,SAACmB,GACL,IA5B0BC,EA4BpBJ,EAAc,GAEpB,IAAK,IAAIK,KAAOF,EAAIhB,KAClBa,EAAYM,KAAZ,KACKH,EAAIhB,KAAKkB,GADd,CAEEV,GAAIU,KAIRxB,GArC0BuB,EAqCCJ,EApC1B,CACLxB,KAAMC,IACN2B,OAAQA,QAoCLhB,OAAM,SAACmB,GAhCgB,IAAClB,EAiCvBR,GAjCuBQ,EAiCCkB,EAhCvB,CACL/B,KAAMC,IACNY,MAAOA,U,iBC7CEmB,EAAc,SAACf,EAAOQ,GACjC,MAAO,CACLzB,KAAMC,IACNgC,QAAShB,EACTQ,OAAQA,IAWCS,EAAS,WAIpB,OAHAC,aAAaC,WAAW,SACxBD,aAAaC,WAAW,kBACxBD,aAAaC,WAAW,UACjB,CACLpC,KAAMC,MAGGoC,EAAmB,SAACC,GAC/B,OAAO,SAACjC,GACNkC,YAAW,WACTlC,EAAS6B,OACS,IAAjBI,KAIME,EAAO,SAACC,EAAOC,EAAUC,GACpC,OAAO,SAACtC,GACNA,EAtCK,CACLL,KAAMC,MAuCN,IAAM2C,EAAW,CACfH,MAAOA,EACPC,SAAUA,EACVG,mBAAmB,GAEjBC,EACF,wGACGH,IACHG,EACE,qHAGJxC,IACGY,KAAK4B,EAAKF,GACVpC,MAAK,SAACC,GACL,IAAMsC,EAAiB,IAAIC,MACzB,IAAIA,MAAOC,UAAsC,IAA1BxC,EAASE,KAAKuC,WAEvCf,aAAagB,QAAQ,QAAS1C,EAASE,KAAKsB,SAC5CE,aAAagB,QAAQ,iBAAkBJ,GACvCZ,aAAagB,QAAQ,SAAU1C,EAASE,KAAKyC,SAC7C/C,EAAS2B,EAAYvB,EAASE,KAAKsB,QAASxB,EAASE,KAAKyC,UAC1D/C,EAASgC,EAAiB5B,EAASE,KAAKuC,eAEzCtC,OAAM,SAACmB,GAnDU,IAAClB,EAoDjBR,GApDiBQ,EAoDCkB,EAAItB,SAASE,KAAKE,MAnDnC,CACLb,KAAMC,IACNY,MAAOA,UAsDEwC,EAAsB,SAACC,GAClC,MAAO,CACLtD,KAAMC,IACNqD,KAAMA,IAIGC,EAAiB,WAC5B,OAAO,SAAClD,GACN,IAAMY,EAAQkB,aAAaqB,QAAQ,SACnC,GAAKvC,EAEE,CACL,IAAM8B,EAAiB,IAAIC,KAAKb,aAAaqB,QAAQ,mBAErD,GAAIT,EAAeE,WAAY,IAAID,MAAOC,UAAW,CACnD,IAAMxB,EAASU,aAAaqB,QAAQ,UACpCnD,EAAS2B,EAAYf,EAAOQ,IAC5BpB,EACEgC,GACGU,EAAeE,WAAY,IAAID,MAAOC,WAAa,WAIxD5C,EAAS6B,UAbX7B,EAAS6B,OCrFf,qV,kBCCAuB,EAAOC,QAAU,CAAC,YAAc,sCAAsC,SAAW,mCAAmC,OAAS,iCAAiC,OAAS,iCAAiC,KAAO,+BAA+B,OAAS,iCAAiC,MAAQ,gCAAgC,MAAQ,kC,8BCDxU,YAEMC,EAFN,OAEiBrD,EAAMsD,OAAO,CAC5BC,QAAS,kDAGIF,O,kBCLfF,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,yBAAyB,MAAQ,0BAA0B,KAAO,2B,iBCAvID,EAAOC,QAAU,CAAC,aAAe,mCAAmC,MAAQ,4BAA4B,KAAO,2BAA2B,KAAO,6B,8BCDjJ,qCASeI,IANE,SAAAlE,GACf,OAAOA,EAAMmE,KACX,yBAAKC,UAAWC,IAAQH,SAAUI,QAAStE,EAAMuE,UAC/C,O,qHCFAC,E,8LACkBC,EAASC,GAC7B,OACED,EAAQN,OAASQ,KAAK3E,MAAMmE,MAC5BM,EAAQxE,WAAa0E,KAAK3E,MAAMC,W,qFAMlC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUkE,KAAMQ,KAAK3E,MAAMmE,KAAMI,QAASI,KAAK3E,MAAM4E,cACrD,yBACER,UAAWC,IAAQG,MACnBK,MAAO,CACLC,UAAWH,KAAK3E,MAAMmE,KAAO,gBAAkB,qBAC/CY,QAASJ,KAAK3E,MAAMmE,KAAO,IAAM,MAElCQ,KAAK3E,MAAMC,e,GAnBF+E,aA0BLR,O,iBC7BfX,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,YAAc,+B,6BCDhG,qCAcemB,IAXA,SAAAjF,GACb,OACE,4BACEsE,QAAStE,EAAMuE,QACfW,SAAUlF,EAAMkF,SAChBd,UAAW,CAACC,IAAQY,OAAQZ,IAAQrE,EAAMmF,UAAUC,KAAK,MACxDpF,EAAMC,Y,kBCRb4D,EAAOC,QAAU,CAAC,eAAiB,uCAAuC,OAAS,iC,kBCAnFD,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,YAAc,mCAAmC,OAAS,gC,gBCAjID,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,OAAS,yB,6BCD7F,qCAOeuB,IAJC,WACd,OAAO,yBAAKjB,UAAWC,IAAQiB,QAAxB,gB,oGCyCMC,IAzCU,SAACC,EAAkB9E,GAC1C,kNACE+E,MAAQ,CACNxE,MAAO,MAFX,EAsBEyE,sBAAwB,WACtB,EAAKC,SAAS,CAAE1E,MAAO,QAvB3B,oFAIwB,IAAD,OACnB0D,KAAKiB,eAAiBlF,EAAMmF,aAAaC,QAAQC,KAAI,SAAAC,GAEnD,OADA,EAAKL,SAAS,CAAE1E,MAAO,OAChB+E,KAETrB,KAAKsB,eAAiBvF,EAAMmF,aAAahF,SAASkF,KAChD,SAAAhE,GAAG,OAAIA,KACP,SAAAd,GACE,EAAK0E,SAAS,CAAE1E,MAAOA,SAZ/B,6CAkBIP,EAAMmF,aAAaC,QAAQI,MAAMvB,KAAKiB,gBACtClF,EAAMmF,aAAahF,SAASqF,MAAMvB,KAAKsB,kBAnB3C,+BA0BI,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE9B,KAAMQ,KAAKc,MAAMxE,MACjB2D,YAAaD,KAAKe,uBACjBf,KAAKc,MAAMxE,MAAQ0D,KAAKc,MAAMxE,MAAMkF,QAAU,MAEjD,kBAACX,EAAqBb,KAAK3E,YAjCnC,GAAqBgF,e,yJCDjBoB,E,iLAEF,IAAIC,EAAa,KAEjB,OAAQ1B,KAAK3E,MAAMI,MACjB,IAAK,eACHiG,EAAa,yBAAKjC,UAAWC,IAAQiC,cACrC,MACF,IAAK,YACHD,EACE,yBAAKjC,UAAWC,IAAQkC,UACtB,yBAAKnC,UAAWC,IAAQmC,SACxB,yBAAKpC,UAAWC,IAAQoC,UAG5B,MACF,IAAK,OACHJ,EAAa,yBAAKjC,UAAWC,IAAQqC,OACrC,MACF,IAAK,SACHL,EAAa,yBAAKjC,UAAWC,IAAQsC,SACrC,MACF,IAAK,QACHN,EAAa,yBAAKjC,UAAWC,IAAQuC,QACrC,MACF,IAAK,QACHP,EAAa,yBAAKjC,UAAWC,IAAQwC,QACrC,MAEF,QACER,EAAa,KAEjB,OAAOA,M,GAhCoBrB,aAmC/BoB,EAAiBU,SAAW,CAC1B1G,KAAM2G,IAASC,OAAOC,YAGTb,QCdAc,IAxBA,SAAClH,GACd,IAAImH,EAAyBC,OAAOC,KAAKrH,EAAMc,aAC5CwG,KAAI,SAACC,GACJ,OAAO,YAAIC,MAAMxH,EAAMc,YAAYyG,KAASD,KAAI,SAACG,EAAGC,GAClD,OAAO,kBAAC,EAAD,CAAkBzF,IAAKsF,EAAQG,EAAGtH,KAAMmH,UAGlDI,QAAO,SAACC,EAAKC,GACZ,OAAOD,EAAIE,OAAOD,KACjB,IAML,OAJsC,IAAlCV,EAAuBtH,SACzBsH,EAAyB,+DAIzB,yBAAK/C,UAAWC,IAAQ6C,QACtB,kBAAC,EAAD,CAAkB9G,KAAK,cACtB+G,EACD,kBAAC,EAAD,CAAkB/G,KAAK,oB,mBCvB7ByD,EAAOC,QAAU,CAAC,QAAU,0B,gBCD5BD,EAAOC,QAAU,IAA0B,yC,gBCC3CD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,gBAAkB,2C,iBCApCD,EAAOC,QAAU,CAAC,aAAe,qC,gBCAjCD,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,MAAQ,yB,8LCErDiE,EAAe,CACnBjH,YAAa,KACbkH,WAAY,EACZ/G,OAAO,EACPgH,UAAU,GAGNC,EAAoB,CACxBC,MAAO,GACPC,OAAQ,GACRC,KAAM,IACNC,MAAO,IAGHpI,EAAgB,SAACuF,EAAO8C,GAC5B,IAAMC,EAAiB,eACpBD,EAAOjI,eAAiBmF,EAAM3E,YAAYyH,EAAOjI,gBAAkB,GAGhEmI,EAAe,CACnB3H,YAFyB3B,YAAasG,EAAM3E,YAAa0H,GAGzDR,WAAYvC,EAAMuC,WAAaE,EAAkBK,EAAOjI,gBACxD2H,UAAU,GAEZ,OAAO9I,YAAasG,EAAOgD,IAGvBlI,EAAmB,SAACkF,EAAO8C,GAC/B,IAAMC,EAAiB,eACpBD,EAAOjI,eAAiBmF,EAAM3E,YAAYyH,EAAOjI,gBAAkB,GAGhEmI,EAAe,CACnB3H,YAFyB3B,YAAasG,EAAM3E,YAAa0H,GAGzDR,WAAYvC,EAAMuC,WAAaE,EAAkBK,EAAOjI,gBACxD2H,UAAU,GAEZ,OAAO9I,YAAasG,EAAOgD,IAGvBC,EAAiB,SAACjD,EAAO8C,GAAR,OACrBpJ,YAAasG,EAAO,CAClB3E,YAAa,CACXqH,MAAOI,EAAOzH,YAAYqH,MAC1BG,MAAOC,EAAOzH,YAAYwH,MAC1BF,OAAQG,EAAOzH,YAAYsH,OAC3BC,KAAME,EAAOzH,YAAYuH,MAE3BL,WAAY,EACZ/G,OAAO,EACPgH,UAAU,KAGR/G,EAAyB,SAACuE,EAAO8C,GAAR,OAC7BpJ,YAAasG,EAAO,CAAExE,OAAO,KAmBhB0H,EAjBC,WAAmC,IAAlClD,EAAiC,uDAAzBsC,EAAcQ,EAAW,uCAChD,OAAQA,EAAOnI,MACb,KAAKC,IACH,OAAOH,EAAcuF,EAAO8C,GAC9B,KAAKlI,IACH,OAAOE,EAAiBkF,EAAO8C,GAEjC,KAAKlI,IACH,OAAOqI,EAAejD,EAAO8C,GAE/B,KAAKlI,IACH,OAAOa,EAAuBuE,GAChC,QACE,OAAOA,ICpEPsC,EAAe,CACnB/F,OAAQ,GACR4G,SAAS,EACTC,WAAW,GAGPlH,EAAe,SAAC8D,EAAO8C,GAAR,OACnBpJ,YAAasG,EAAO,CAAEoD,WAAW,KAE7BC,EAAsB,SAACrD,EAAO8C,GAAR,OAC1BpJ,YAAasG,EAAO,CAAEmD,SAAS,KAC3BnH,EAAwB,SAACgE,EAAO8C,GACpC,IAAMQ,EAAW5J,YAAaoJ,EAAOnH,UAAW,CAAEG,GAAIgH,EAAO/G,UAE7D,OAAOrC,YAAasG,EAAO,CACzBmD,SAAS,EACTC,WAAW,EACX7G,OAAQyD,EAAMzD,OAAO8F,OAAOiB,MAI1BrH,EAAqB,SAAC+D,EAAO8C,GAAR,OACzBpJ,YAAasG,EAAO,CAClBmD,SAAS,KAGPI,EAAkB,SAACvD,EAAO8C,GAAR,OACtBpJ,YAAasG,EAAO,CAAEmD,SAAS,KAE3BK,EAAoB,SAACxD,EAAO8C,GAAR,OACxBpJ,YAAasG,EAAO,CAClBzD,OAAQuG,EAAOvG,OACf4G,SAAS,KAEPM,EAAiB,SAACzD,EAAO8C,GAAR,OACrBpJ,YAAasG,EAAO,CAClBmD,SAAS,KA0BED,EAxBC,WAAmC,IAAlClD,EAAiC,uDAAzBsC,EAAcQ,EAAW,uCAChD,OAAQA,EAAOnI,MACb,KAAKC,IACH,OAAOsB,EAAa8D,GAEtB,KAAKpF,IACH,OAAOyI,EAAoBrD,GAE7B,KAAKpF,IACH,OAAOoB,EAAsBgE,EAAO8C,GAEtC,KAAKlI,IACH,OAAOqB,EAAmB+D,GAC5B,KAAKpF,IACH,OAAO2I,EAAgBvD,GACzB,KAAKpF,IACH,OAAO4I,EAAkBxD,EAAO8C,GAClC,KAAKlI,IACH,OAAO6I,EAAezD,GACxB,QACE,OAAOA,IC3DPsC,EAAe,CACnB1G,MAAO,KACPQ,OAAQ,KACRZ,MAAO,KACP2H,SAAS,EACTO,iBAAkB,KAEdC,EAAY,SAAC3D,EAAO8C,GACxB,OAAOpJ,YAAasG,EAAO,CAAExE,MAAO,KAAM2H,SAAS,KAE/CxG,EAAc,SAACqD,EAAO8C,GAC1B,OAAOpJ,YAAasG,EAAO,CACzBpE,MAAOkH,EAAOlG,QACdR,OAAQ0G,EAAO1G,OACfZ,MAAO,KACP2H,SAAS,KAIPS,EAAW,SAAC5D,EAAO8C,GACvB,OAAOpJ,YAAasG,EAAO,CACzBxE,MAAOsH,EAAOtH,MACd2H,SAAS,KAIPU,EAAa,SAAC7D,EAAO8C,GACzB,OAAOpJ,YAAasG,EAAO,CACzBpE,MAAO,KACPQ,OAAQ,QAIN4B,EAAsB,SAACgC,EAAO8C,GAClC,OAAOpJ,YAAasG,EAAO,CAAE0D,iBAAkBZ,EAAO7E,QAoBzCiF,EAjBC,WAAmC,IAAlClD,EAAiC,uDAAzBsC,EAAcQ,EAAW,uCAChD,OAAQA,EAAOnI,MACb,KAAKC,IACH,OAAO+I,EAAU3D,GACnB,KAAKpF,IACH,OAAOgJ,EAAS5D,EAAO8C,GACzB,KAAKlI,IACH,OAAO+B,EAAYqD,EAAO8C,GAC5B,KAAKlI,IACH,OAAOiJ,EAAW7D,GACpB,KAAKpF,IACH,OAAOoD,EAAoBgC,EAAO8C,GACpC,QACE,OAAO9C,I,+HCzCE8D,EARF,SAAAvJ,GACX,OACE,yBAAKoE,UAAWC,IAAQkF,MACtB,yBAAKC,IAAKC,IAAYC,IAAI,e,6CCUjBC,GAbS,SAAA3J,GACtB,OACE,wBAAIoE,UAAWC,KAAQuF,gBACrB,kBAAC,IAAD,CACEC,GAAI7J,EAAM8J,KACVC,MAAO/J,EAAM+J,MACbC,gBAAiB3F,KAAQ4F,QACxBjK,EAAMC,YCYAiK,GAnBS,SAAAlK,GACtB,OACE,wBAAIoE,UAAWC,IAAQ6F,iBACrB,kBAAC,GAAD,CAAgBJ,KAAK,IAAIC,OAAK,GAA9B,kBAGC/J,EAAMmK,gBACL,kBAAC,GAAD,CAAgBL,KAAK,WAArB,UACE,KAEF9J,EAAMmK,gBAGN,kBAAC,GAAD,CAAgBL,KAAK,WAArB,UAFA,kBAAC,GAAD,CAAgBA,KAAK,SAArB,kB,oBCFOM,GAVM,SAAApK,GACnB,OACE,yBAAKsE,QAAStE,EAAMuE,QAASH,UAAWC,KAAQ+F,cAC9C,8BACA,8BACA,gCCcSC,GAhBC,SAAArK,GACd,OACE,4BAAQoE,UAAWC,IAAQgG,SACzB,kBAAC,GAAD,CAAc9F,QAASvE,EAAMsK,sBAE7B,yBAAKlG,UAAWC,IAAQkF,MACtB,kBAAC,EAAD,OAGF,yBAAKnF,UAAWC,IAAQkG,aACtB,kBAAC,GAAD,CAAiBJ,gBAAiBnK,EAAMwK,Y,6BCYjCC,GArBI,SAACzK,GAClB,IAAI0K,EAAkB,CAACrG,KAAQoG,WAAYpG,KAAQsG,OAInD,OAHI3K,EAAM4K,OACRF,EAAkB,CAACrG,KAAQoG,WAAYpG,KAAQwG,OAG/C,kBAAC,IAAD,KACE,kBAAC3G,GAAA,EAAD,CAAUC,KAAMnE,EAAM4K,KAAMrG,QAASvE,EAAM8K,SAC3C,yBAAK1G,UAAWsG,EAAgBtF,KAAK,KAAMd,QAAStE,EAAM8K,QACxD,yBAAK1G,UAAWC,KAAQkF,MACtB,kBAAC,EAAD,OAGF,6BACE,kBAAC,GAAD,CAAiBY,gBAAiBnK,EAAMwK,aCd5CO,G,2MACJtF,MAAQ,CACNuF,gBAAgB,G,EAElBC,wBAA0B,WACxB,EAAKtF,SAAS,CAAEqF,gBAAgB,K,EAElCE,wBAA0B,WACxB,EAAKvF,UAAS,SAAAwF,GACZ,MAAO,CAAEH,gBAAiBG,EAASH,oB,wEAKrC,OACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CACER,OAAQ7F,KAAK3E,MAAMmK,gBACnBG,oBAAqB3F,KAAKuG,0BAE5B,kBAAC,GAAD,CACEV,OAAQ7F,KAAK3E,MAAMmK,gBACnBW,OAAQnG,KAAKsG,wBACbL,KAAMjG,KAAKc,MAAMuF,iBAEnB,0BAAM5G,UAAWC,IAAQ+G,SAAUzG,KAAK3E,MAAMC,e,GAzBjC+E,aAqCNqG,gBANS,SAAA5F,GACtB,MAAO,CACL0E,gBAAsC,OAArB1E,EAAM7C,KAAKvB,SAIjBgK,CAAyBN,I,6BCvBzBO,GAlBM,SAAAtL,GACnB,OACE,yBAAKoE,UAAWC,KAAQiH,cACtB,yBAAKlH,UAAWC,KAAQkH,OAAQvL,EAAMwL,OACtC,4BACEpH,UAAWC,KAAQoH,KACnBnH,QAAStE,EAAM0L,kBACfxG,SAAUlF,EAAM2L,SAHlB,QAOA,4BAAQvH,UAAWC,KAAQuH,KAAMtH,QAAStE,EAAM6L,iBAAhD,U,oBCVAC,GAAW,CACf,CAAEN,MAAO,QAASpL,KAAM,SACxB,CAAEoL,MAAO,SAAUpL,KAAM,SACzB,CAAEoL,MAAO,SAAUpL,KAAM,UACzB,CAAEoL,MAAO,OAAQpL,KAAM,SA8BV2L,GA3BO,SAAC/L,GACrB,OACE,yBAAKoE,UAAWC,KAAQ0H,eACtB,6CACiB,gCAAS/L,EAAMgM,MAAMC,QAAQ,KAE7CH,GAASxE,KAAI,SAACO,GACb,OACE,kBAAC,GAAD,CACE2D,MAAO3D,EAAG2D,MACVvJ,IAAK4F,EAAGzH,KACRyL,gBAAiB,kBAAM7L,EAAM6L,gBAAgBhE,EAAGzH,OAChDsL,kBAAmB,kBAAM1L,EAAM0L,kBAAkB7D,EAAGzH,OACpDuL,QAAS3L,EAAM2L,QAAQ9D,EAAGzH,WAIhC,4BACEgE,UAAWC,KAAQ6H,YACnBhH,UAAWlF,EAAMmM,aACjB7H,QAAStE,EAAMoM,SACdpM,EAAMwK,OAAS,YAAc,sB,SCOvB6B,G,uOAhCH,IAAD,OACDC,EAAoBlF,OAAOC,KAAK1C,KAAK3E,MAAMc,aAAawG,KAC5D,SAACC,GACC,OACE,wBAAItF,IAAKsF,GACP,0BAAM1C,MAAO,CAAE0H,cAAe,eAAiBhF,GADjD,IACgE,IAC7D,EAAKvH,MAAMc,YAAYyG,OAMhC,OACE,kBAAC,IAAD,KACE,0CACA,iFACA,4BAAK+E,GACL,2BACE,gDAAsB3H,KAAK3E,MAAMgM,MAAMC,QAAQ,KAEjD,oDACA,kBAAChH,GAAA,EAAD,CAAQE,QAAQ,SAASZ,QAASI,KAAK3E,MAAMwM,mBAA7C,UAGA,kBAACvH,GAAA,EAAD,CAAQE,QAAQ,UAAUZ,QAASI,KAAK3E,MAAMyM,mBAA9C,iB,GA3BmBzH,a,4QCUpB,IAAM0H,GAAb,2MACEjH,MAAQ,CACNkH,YAAY,GAFhB,EASEC,qBAAuB,SAACC,GAMtB,OALYzF,OAAOC,KAAKwF,GACrBvF,KAAI,SAACC,GACJ,OAAOsF,EAAmBtF,MAE3BI,QAAO,SAACmF,EAAKjF,GAAN,OAAaiF,EAAMjF,IAAI,GACpB,GAfjB,EA2DEkF,gBAAkB,WACZ,EAAK/M,MAAMmK,gBACb,EAAKxE,SAAS,CAAEgH,YAAY,KAE5B,EAAK3M,MAAMgN,kBAAkB,aAC7B,EAAKhN,MAAMiN,QAAQ/K,KAAK,WAhE9B,EAmEEgL,sBAAwB,kBAAM,EAAKvH,SAAS,CAAEgH,YAAY,KAnE5D,EAoEEQ,wBAA0B,WAcxB,EAAKnN,MAAMoN,iBAEX,EAAKpN,MAAMiN,QAAQ/K,KAAK,cApF5B,mFAMIyC,KAAK3E,MAAMqN,sBANf,+BAwFI,IAAMC,E,2VAAW,IACZ3I,KAAK3E,MAAMuN,MAIhB,IAAK,IAAItL,KAAOqL,EACdA,EAAYrL,GAAOqL,EAAYrL,IAAQ,EAEzC,IAAIuL,EAAe,KAEfC,EAAS9I,KAAK3E,MAAMiB,MACtB,4DAEA,kBAACoE,GAAA,EAAD,MA4BF,OA1BIV,KAAK3E,MAAMuN,OACbE,EACE,kBAAC,IAAD,KACE,kBAACvG,GAAA,EAAD,CAAQpG,YAAa6D,KAAK3E,MAAMuN,OAChC,kBAAC,GAAD,CACE1B,gBAAiBlH,KAAK3E,MAAM0N,kBAC5BhC,kBAAmB/G,KAAK3E,MAAM2N,oBAC9BhC,QAAS2B,EACTtB,MAAOrH,KAAK3E,MAAMgM,MAClBG,aAAcxH,KAAKiI,qBAAqBjI,KAAK3E,MAAMuN,MACnD/C,OAAQ7F,KAAK3E,MAAMmK,gBACnBiC,QAASzH,KAAKoI,mBAKpBS,EACE,kBAAC,GAAD,CACE1M,YAAa6D,KAAK3E,MAAMuN,KACxBf,kBAAmB7H,KAAKuI,sBACxBT,kBAAmB9H,KAAKwI,wBACxBnB,MAAOrH,KAAK3E,MAAMgM,SAMtB,kBAAC,IAAD,KACE,kBAACxH,GAAA,EAAD,CACEL,KAAMQ,KAAKc,MAAMkH,WACjB/H,YAAaD,KAAKuI,uBACjBM,GAEFC,OAxIT,GAAmCzI,aAkKpBqG,gBApBS,SAAC5F,GACvB,MAAO,CACL8H,KAAM9H,EAAMmI,cAAc9M,YAC1BkL,MAAOvG,EAAMmI,cAAc5F,WAC3B/G,MAAOwE,EAAMmI,cAAc3M,MAC3BkJ,gBAAsC,OAArB1E,EAAM7C,KAAKvB,UAIL,SAACZ,GAC1B,MAAO,CACLiN,kBAAmB,SAACG,GAAD,OAAapN,EAASqN,KAAsBD,KAC/DF,oBAAqB,SAACE,GAAD,OACnBpN,EAASqN,KAAyBD,KACpCR,kBAAmB,kBAAM5M,EAASqN,SAClCV,eAAgB,kBAAM3M,EAASqN,SAC/Bd,kBAAmB,SAACtJ,GAAD,OAAUjD,EAASqN,KAA4BpK,QAIvD2H,CAGb9F,aAAiBmH,GAAehM,O,SC9K5BqN,G,4LAEFpJ,KAAK3E,MAAMgO,a,+BAGX,OAAO,kBAAC,KAAD,CAAUnE,GAAG,U,GALH7E,aAeNqG,eAAQ,MANI,SAAA5K,GACzB,MAAO,CACLuN,SAAU,kBAAMvN,EAASqN,YAIdzC,CAAkC0C,ICClCE,GAnBQ,SAACC,GACtB,kNACEzI,MAAQ,CACN0I,UAAW,MAFf,mFAKuB,IAAD,OAClBD,IAAkBtN,MAAK,SAACwN,GACtB,EAAKzI,SAAS,CAAEwI,UAAWC,EAAIC,eAPrC,+BAYI,IAAMC,EAAI3J,KAAKc,MAAM0I,UACrB,OAAOG,EAAI,kBAACA,EAAM3J,KAAK3E,OAAY,SAbvC,GAAqBgF,cCQjBuJ,GAAgBN,IAAe,WACnC,OAAO,iCAGHO,GAAaP,IAAe,WAChC,OAAO,iCAGHQ,GAAWR,IAAe,WAC9B,OAAO,iCAEHS,G,4LAEF/J,KAAK3E,MAAM2O,oB,+BAGX,IAAIC,EACF,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOlL,KAAK,QAAQyK,UAAWM,KAC/B,kBAAC,KAAD,CAAO/K,KAAK,IAAIqG,OAAK,EAACoE,UAAWzB,KACjC,kBAAC,KAAD,CAAU7C,GAAG,OAgBjB,OAZIlF,KAAK3E,MAAMmK,kBACbyE,EACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOlL,KAAK,YAAYyK,UAAWI,KACnC,kBAAC,KAAD,CAAO7K,KAAK,UAAUyK,UAAWK,KACjC,kBAAC,KAAD,CAAO9K,KAAK,UAAUyK,UAAWJ,KACjC,kBAAC,KAAD,CAAOrK,KAAK,QAAQyK,UAAWM,KAC/B,kBAAC,KAAD,CAAO/K,KAAK,IAAIqG,OAAK,EAACoE,UAAWzB,KACjC,kBAAC,KAAD,CAAU7C,GAAG,QAKjB,6BACE,kBAAC,GAAD,KAAS+E,Q,GA3BC5J,aA2CH6J,gBAAWxD,aAVF,SAAC5F,GACvB,MAAO,CACL0E,gBAAsC,OAArB1E,EAAM7C,KAAKvB,UAGL,SAACZ,GAC1B,MAAO,CACLkO,gBAAiB,kBAAMlO,EAASqN,YAGVzC,CAA6CqD,KCrDnDI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCLN,IAAMC,GAAcC,YAAgB,CAClCxB,cAAeyB,EACfC,MAAOC,EACP3M,KAAM4M,IAEFC,GAGQC,IAERC,GAAQC,YACZT,GACAM,GAAiBI,YAAgBC,OAG7BC,GACJ,kBAAC,IAAD,CAAUJ,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,GAAD,QAINK,IAASC,OAAOF,GAAKG,SAASC,eAAe,SD8FvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1P,MAAK,SAAA2P,GACjCA,EAAaC,kB","file":"static/js/main.fa608b9b.chunk.js","sourcesContent":["export const ADD_INGREDIENT = \"ADD_INGREDIENT\";\r\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\r\nexport const SET_INGREDIENTS = \"SET_INGREDIENTS\";\r\nexport const FETCH_INGREDIENTS_FAILED = \"FETCH_INGREDIENTS_FAILED\";\r\n\r\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGER_START\";\r\nexport const PURCHASE_BURGER_SUCCESS = \"PURCHASE_BURGER_SUCCESS\";\r\nexport const PURCHASE_BURGER_FAIL = \"PURCHASE_BURGER_FAIL\";\r\nexport const PURCHASE_INIT = \"PURCHASE_INIT\";\r\n\r\nexport const FETCH_ORDER_START = \"FETCH_ORDER_START\";\r\nexport const FETCH_ORDER_SUCCESS = \"FETCH_ORDER_SUCCESS\";\r\nexport const FETCH_ORDER_FAIL = \"FETCH_ORDER_FAIL\";\r\n\r\nexport const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = \"SET_AUTH_REDIRECT_PATH\";\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties,\r\n  };\r\n};\r\n\r\nexport const checkValidity = (value, rules) => {\r\n  let isValid = true;\r\n  if (!rules) {\r\n    return true;\r\n  }\r\n\r\n  if (rules.required) {\r\n    isValid = value.trim() !== \"\" && isValid;\r\n  }\r\n\r\n  if (rules.minLength) {\r\n    isValid = value.length >= rules.minLength && isValid;\r\n  }\r\n\r\n  if (rules.maxLength) {\r\n    isValid = value.length <= rules.maxLength && isValid;\r\n  }\r\n  return isValid;\r\n};\r\n","const Aux = props => props.children;\r\n\r\nexport default Aux;\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-orders\";\r\n\r\nexport const addIngredient = name => {\r\n  return {\r\n    type: actionTypes.ADD_INGREDIENT,\r\n    ingredientName: name\r\n  };\r\n};\r\n\r\nexport const removeIngredient = name => {\r\n  return {\r\n    type: actionTypes.REMOVE_INGREDIENT,\r\n    ingredientName: name\r\n  };\r\n};\r\n\r\nexport const setIngredients = ingredients => {\r\n  return {\r\n    type: actionTypes.SET_INGREDIENTS,\r\n    ingredients: ingredients\r\n  };\r\n};\r\n\r\nexport const initIngredients = () => {\r\n  return dispatch => {\r\n    axios\r\n      .get(\"https://react-my-burger-6d880.firebaseio.com/ingredients.json\")\r\n      .then(response => {\r\n        dispatch(setIngredients(response.data));\r\n      })\r\n      .catch(error => dispatch(fetchIngredientsFailed()));\r\n  };\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n  return {\r\n    type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n  };\r\n};\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-orders\";\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n    orderId: id,\r\n    orderData: orderData,\r\n  };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_START,\r\n  };\r\n};\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n  return (dispatch) => {\r\n    dispatch(purchaseBurgerStart());\r\n    axios\r\n      .post(\"/orders.json?auth=\" + token, orderData)\r\n      .then((response) => {\r\n        dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(purchaseBurgerFail(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n  return {\r\n    type: actionTypes.PURCHASE_INIT,\r\n  };\r\n};\r\n\r\nexport const fetchOrderSuccess = (orders) => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDER_SUCCESS,\r\n    orders: orders,\r\n  };\r\n};\r\n\r\nexport const fetchOrderFail = (error) => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDER_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const fetchOrderStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDER_START,\r\n  };\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchOrderStart());\r\n    const queryParams =\r\n      \"?auth=\" + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n    axios\r\n      .get(\"/orders.json\" + queryParams)\r\n      .then((res) => {\r\n        const fetchOrders = [];\r\n        // eslint-disable-next-line no-unused-vars\r\n        for (let key in res.data) {\r\n          fetchOrders.push({\r\n            ...res.data[key],\r\n            id: key,\r\n          });\r\n        }\r\n\r\n        dispatch(fetchOrderSuccess(fetchOrders));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(fetchOrderFail(err));\r\n      });\r\n  };\r\n};\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"axios\";\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    idToken: token,\r\n    userId: userId,\r\n  };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"expirationDate\");\r\n  localStorage.removeItem(\"userId\");\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n  };\r\n};\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(logout());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\nexport const auth = (email, password, isSugnup) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    };\r\n    let url =\r\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBCVe5MADdmKHh8ZHl0b0P-Q6o3UzNQX-s\";\r\n    if (!isSugnup) {\r\n      url =\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBCVe5MADdmKHh8ZHl0b0P-Q6o3UzNQX-s\";\r\n    }\r\n\r\n    axios\r\n      .post(url, authData)\r\n      .then((response) => {\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000\r\n        );\r\n        localStorage.setItem(\"token\", response.data.idToken);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        localStorage.setItem(\"userId\", response.data.localId);\r\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(authFail(err.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n  return {\r\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n    path: path,\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      dispatch(logout());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n\r\n      if (expirationDate.getTime() > new Date().getTime()) {\r\n        const userId = localStorage.getItem(\"userId\");\r\n        dispatch(authSuccess(token, userId));\r\n        dispatch(\r\n          checkAuthTimeout(\r\n            (expirationDate.getTime() - new Date().getTime()) / 1000\r\n          )\r\n        );\r\n      } else {\r\n        dispatch(logout());\r\n      }\r\n    }\r\n  };\r\n};\r\n","export {\r\n  addIngredient,\r\n  removeIngredient,\r\n  initIngredients\r\n} from \"./burgerBuilder\";\r\n\r\nexport { purchaseBurger, purchaseInit, fetchOrders } from \"./order\";\r\n\r\nexport { auth, logout, setAuthRedirectPath, authCheckState } from \"./auth\";\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__CV3uh\",\"BreadTop\":\"BurgerIngredient_BreadTop__1ZgRK\",\"Seeds1\":\"BurgerIngredient_Seeds1__1Hygx\",\"Seeds2\":\"BurgerIngredient_Seeds2__2c5_h\",\"Meat\":\"BurgerIngredient_Meat__UyxZc\",\"Cheese\":\"BurgerIngredient_Cheese__M4zep\",\"Salad\":\"BurgerIngredient_Salad__1iQSz\",\"Bacon\":\"BurgerIngredient_Bacon__3nMUA\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://react-my-burger-6d880.firebaseio.com/\"\r\n});\r\n\r\nexport default instance;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1ahkD\",\"Open\":\"SideDrawer_Open__1VouQ\",\"Close\":\"SideDrawer_Close__9jL71\",\"Logo\":\"SideDrawer_Logo__1V40R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__3POrX\",\"Label\":\"BuildControl_Label__3wfUc\",\"Less\":\"BuildControl_Less__FDEym\",\"More\":\"BuildControl_More__vuJD5\"};","import React from \"react\";\r\nimport classes from \"./Backdrop.module.css\";\r\n\r\nconst Backdrop = props => {\r\n  return props.show ? (\r\n    <div className={classes.Backdrop} onClick={props.clicked}></div>\r\n  ) : null;\r\n};\r\n\r\nexport default Backdrop;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./Modal.module.css\";\r\nimport Aux from \"../../../hoc/Auxiliary\";\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\nclass Modal extends Component {\r\n  shouldComponentUpdate(nextPro, nextState) {\r\n    return (\r\n      nextPro.show !== this.props.show ||\r\n      nextPro.children !== this.props.children\r\n    );\r\n  }\r\n\r\n  UNSAVE_componentWillUpdate() {}\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n        <div\r\n          className={classes.Modal}\r\n          style={{\r\n            transform: this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n            opacity: this.props.show ? \"1\" : \"0\",\r\n          }}>\r\n          {this.props.children}\r\n        </div>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__3XnTt\",\"Logo\":\"Toolbar_Logo__XrGWl\",\"DesktopOnly\":\"Toolbar_DesktopOnly__2dEeQ\"};","import React from \"react\";\r\nimport classes from \"./Button.module.css\";\r\n\r\nconst Button = props => {\r\n  return (\r\n    <button\r\n      onClick={props.clicked}\r\n      disabled={props.disabled}\r\n      className={[classes.Button, classes[props.btnType]].join(\" \")}>\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1h4p4\",\"active\":\"NavigationItem_active__1QdcI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__3ml9J\",\"OrderButton\":\"BuildControls_OrderButton__1k3_S\",\"enable\":\"BuildControls_enable__2pG6-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__Oyzdr\",\"Success\":\"Button_Success__sfZbI\",\"Danger\":\"Button_Danger__2J9LX\"};","import React from \"react\";\r\nimport classes from \"./Spinner.module.css\";\r\n\r\nconst Spinner = () => {\r\n  return <div className={classes.Loader}>Loading...</div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Component } from \"react\";\r\nimport Aux from \"../Auxiliary\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n  return class extends Component {\r\n    state = {\r\n      error: null\r\n    };\r\n    componentWillMount() {\r\n      this.reqInterceptor = axios.interceptors.request.use(req => {\r\n        this.setState({ error: null });\r\n        return req;\r\n      });\r\n      this.resInterceptor = axios.interceptors.response.use(\r\n        res => res,\r\n        error => {\r\n          this.setState({ error: error });\r\n        }\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      axios.interceptors.request.eject(this.reqInterceptor);\r\n      axios.interceptors.response.eject(this.resInterceptor);\r\n    }\r\n\r\n    errorConfirmedHandler = () => {\r\n      this.setState({ error: null });\r\n    };\r\n    render() {\r\n      return (\r\n        <Aux>\r\n          <Modal\r\n            show={this.state.error}\r\n            modalClosed={this.errorConfirmedHandler}>\r\n            {this.state.error ? this.state.error.message : null}\r\n          </Modal>\r\n          <WrappedComponent {...this.props} />\r\n        </Aux>\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default withErrorHandler;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./BurgerIngredient.module.css\";\r\nimport ProTypes from \"prop-types\";\r\n\r\nclass BurgerIngredient extends Component {\r\n  render() {\r\n    let ingredient = null;\r\n\r\n    switch (this.props.type) {\r\n      case \"bread-bottom\":\r\n        ingredient = <div className={classes.BreadBottom}></div>;\r\n        break;\r\n      case \"bread-top\":\r\n        ingredient = (\r\n          <div className={classes.BreadTop}>\r\n            <div className={classes.Seeds1}></div>\r\n            <div className={classes.Seeds2}></div>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"meat\":\r\n        ingredient = <div className={classes.Meat}></div>;\r\n        break;\r\n      case \"cheese\":\r\n        ingredient = <div className={classes.Cheese}></div>;\r\n        break;\r\n      case \"bacon\":\r\n        ingredient = <div className={classes.Bacon}></div>;\r\n        break;\r\n      case \"salad\":\r\n        ingredient = <div className={classes.Salad}></div>;\r\n        break;\r\n\r\n      default:\r\n        ingredient = null;\r\n    }\r\n    return ingredient;\r\n  }\r\n}\r\nBurgerIngredient.proTypes = {\r\n  type: ProTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;\r\n","import React from \"react\";\r\nimport classes from \"./Burger.module.css\";\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\r\n// import { withRouter } from \"react-router-dom\";\r\n\r\nconst Burger = (props) => {\r\n  let transformedIngredients = Object.keys(props.ingredients)\r\n    .map((igKey) => {\r\n      return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n        return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n      });\r\n    })\r\n    .reduce((arr, el) => {\r\n      return arr.concat(el);\r\n    }, []);\r\n\r\n  if (transformedIngredients.length === 0) {\r\n    transformedIngredients = <p>Please start adding ingredients</p>;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Burger}>\r\n      <BurgerIngredient type='bread-top' />\r\n      {transformedIngredients}\r\n      <BurgerIngredient type='bread-bottom' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Burger;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Layout_content__calQ8\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1wSnN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__-x9jo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__12ngd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__IRHts\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__2AVid\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1I0DP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__3VHAq\",\"load2\":\"Spinner_load2__3F0MU\"};","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../../shared/utility\";\r\n\r\nconst initialState = {\r\n  ingredients: null,\r\n  totalPrice: 4,\r\n  error: false,\r\n  building: false,\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n  salad: 0.5,\r\n  cheese: 0.4,\r\n  meat: 1.3,\r\n  bacon: 0.7,\r\n};\r\n\r\nconst addIngredient = (state, action) => {\r\n  const updatedIngredient = {\r\n    [action.ingredientName]: state.ingredients[action.ingredientName] + 1,\r\n  };\r\n  const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n  const updatedState = {\r\n    ingredients: updatedIngredients,\r\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n    building: true,\r\n  };\r\n  return updateObject(state, updatedState);\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n  const updatedIngredient = {\r\n    [action.ingredientName]: state.ingredients[action.ingredientName] - 1,\r\n  };\r\n  const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n  const updatedState = {\r\n    ingredients: updatedIngredients,\r\n    totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n    building: true,\r\n  };\r\n  return updateObject(state, updatedState);\r\n};\r\n\r\nconst setIngredients = (state, action) =>\r\n  updateObject(state, {\r\n    ingredients: {\r\n      salad: action.ingredients.salad,\r\n      bacon: action.ingredients.bacon,\r\n      cheese: action.ingredients.cheese,\r\n      meat: action.ingredients.meat,\r\n    },\r\n    totalPrice: 4,\r\n    error: false,\r\n    building: false,\r\n  });\r\n\r\nconst fetchIngredientsFailed = (state, action) =>\r\n  updateObject(state, { error: true });\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_INGREDIENT:\r\n      return addIngredient(state, action);\r\n    case actionTypes.REMOVE_INGREDIENT:\r\n      return removeIngredient(state, action);\r\n\r\n    case actionTypes.SET_INGREDIENTS:\r\n      return setIngredients(state, action);\r\n\r\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n      return fetchIngredientsFailed(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../../shared/utility\";\r\n// import { fetchOrderFail } from \"../actions/order\";\r\n\r\nconst initialState = {\r\n  orders: [],\r\n  loading: false,\r\n  purchased: false,\r\n};\r\n\r\nconst purchaseInit = (state, action) =>\r\n  updateObject(state, { purchased: false });\r\n\r\nconst purchaseBurgerStart = (state, action) =>\r\n  updateObject(state, { loading: true });\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n  const newOrder = updateObject(action.orderData, { id: action.orderId });\r\n\r\n  return updateObject(state, {\r\n    loading: false,\r\n    purchased: true,\r\n    orders: state.orders.concat(newOrder),\r\n  });\r\n};\r\n\r\nconst purchaseBurgerFail = (state, action) =>\r\n  updateObject(state, {\r\n    loading: false,\r\n  });\r\n\r\nconst fetchOrderStart = (state, action) =>\r\n  updateObject(state, { loading: true });\r\n\r\nconst fetchOrderSuccess = (state, action) =>\r\n  updateObject(state, {\r\n    orders: action.orders,\r\n    loading: false,\r\n  });\r\nconst fetchOrderFail = (state, action) =>\r\n  updateObject(state, {\r\n    loading: false,\r\n  });\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.PURCHASE_INIT:\r\n      return purchaseInit(state, action);\r\n\r\n    case actionTypes.PURCHASE_BURGER_START:\r\n      return purchaseBurgerStart(state, action);\r\n\r\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n      return purchaseBurgerSuccess(state, action);\r\n\r\n    case actionTypes.PURCHASE_BURGER_FAIL:\r\n      return purchaseBurgerFail(state, action);\r\n    case actionTypes.FETCH_ORDER_START:\r\n      return fetchOrderStart(state, action);\r\n    case actionTypes.FETCH_ORDER_SUCCESS:\r\n      return fetchOrderSuccess(state, action);\r\n    case actionTypes.FETCH_ORDER_FAIL:\r\n      return fetchOrderFail(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../../shared/utility\";\r\n\r\nconst initialState = {\r\n  token: null,\r\n  userId: null,\r\n  error: null,\r\n  loading: false,\r\n  authRedirectPath: \"/\",\r\n};\r\nconst authStart = (state, action) => {\r\n  return updateObject(state, { error: null, loading: true });\r\n};\r\nconst authSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    token: action.idToken,\r\n    userId: action.userId,\r\n    error: null,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n  return updateObject(state, {\r\n    token: null,\r\n    userId: null,\r\n  });\r\n};\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n  return updateObject(state, { authRedirectPath: action.path });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return authStart(state, action);\r\n    case actionTypes.AUTH_FAIL:\r\n      return authFail(state, action);\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return authSuccess(state, action);\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return authLogout(state, action);\r\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\r\n      return setAuthRedirectPath(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport burgerLogo from \"../../assets/images/burger-logo.png\";\r\nimport classes from \"./Logo.module.css\";\r\n\r\nconst Logo = props => {\r\n  return (\r\n    <div className={classes.Logo}>\r\n      <img src={burgerLogo} alt=\"MyBurger\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./NavigationItem.module.css\";\r\n\r\nconst NaviagationItem = props => {\r\n  return (\r\n    <li className={classes.NavigationItem}>\r\n      <NavLink\r\n        to={props.link}\r\n        exact={props.exact}\r\n        activeClassName={classes.active}>\r\n        {props.children}\r\n      </NavLink>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default NaviagationItem;\r\n","import React from \"react\";\r\nimport classes from \"./NavigationItems.module.css\";\r\nimport NavigationItem from \"../NavigationItem/NaviagationItem\";\r\n\r\nconst NavigationItems = props => {\r\n  return (\r\n    <ul className={classes.NavigationItems}>\r\n      <NavigationItem link='/' exact>\r\n        Burger Builder\r\n      </NavigationItem>\r\n      {props.isAuthenticated ? (\r\n        <NavigationItem link='/orders'>Orders</NavigationItem>\r\n      ) : null}\r\n\r\n      {!props.isAuthenticated ? (\r\n        <NavigationItem link='/auth'>Authenticate</NavigationItem>\r\n      ) : (\r\n        <NavigationItem link='/logout'>Logout</NavigationItem>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavigationItems;\r\n","import React from \"react\";\r\nimport classes from \"./DrawerToggle.module.css\";\r\n\r\nconst DrawerToggle = props => {\r\n  return (\r\n    <div onClick={props.clicked} className={classes.DrawerToggle}>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrawerToggle;\r\n","import React from \"react\";\r\nimport classes from \"./Toolbar.module.css\";\r\nimport Logo from \"../../Logo/Logo\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nimport DrawerToggle from \"../SideDrawer/DrawerToggle/DrawerToggle\";\r\n\r\nconst Toolbar = props => {\r\n  return (\r\n    <header className={classes.Toolbar}>\r\n      <DrawerToggle clicked={props.drawerToggleClicked} />\r\n\r\n      <div className={classes.Logo}>\r\n        <Logo />\r\n      </div>\r\n\r\n      <nav className={classes.DesktopOnly}>\r\n        <NavigationItems isAuthenticated={props.isAuth} />\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React from \"react\";\r\nimport Logo from \"../../Logo/Logo\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\nimport Aux from \"../../../hoc/Auxiliary\";\r\nimport classes from \"./SideDrawer.module.css\";\r\n\r\nconst SideDrawer = (props) => {\r\n  let attachedClasses = [classes.SideDrawer, classes.Close];\r\n  if (props.open) {\r\n    attachedClasses = [classes.SideDrawer, classes.Open];\r\n  }\r\n  return (\r\n    <Aux>\r\n      <Backdrop show={props.open} clicked={props.closed} />\r\n      <div className={attachedClasses.join(\" \")} onClick={props.closed}>\r\n        <div className={classes.Logo}>\r\n          <Logo />\r\n        </div>\r\n\r\n        <nav>\r\n          <NavigationItems isAuthenticated={props.isAuth} />\r\n        </nav>\r\n      </div>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Aux from \"../Auxiliary\";\r\nimport classes from \"./Layout.module.css\";\r\nimport Toolbar from \"../../components/Navigation/toolbar/Toolbar\";\r\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\";\r\n\r\nclass Layout extends Component {\r\n  state = {\r\n    showSideDrawer: false\r\n  };\r\n  SideDrawerClosedHandler = () => {\r\n    this.setState({ showSideDrawer: false });\r\n  };\r\n  sideDrawerToggleHandler = () => {\r\n    this.setState(prevStae => {\r\n      return { showSideDrawer: !prevStae.showSideDrawer };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <Toolbar\r\n          isAuth={this.props.isAuthenticated}\r\n          drawerToggleClicked={this.sideDrawerToggleHandler}\r\n        />\r\n        <SideDrawer\r\n          isAuth={this.props.isAuthenticated}\r\n          closed={this.SideDrawerClosedHandler}\r\n          open={this.state.showSideDrawer}\r\n        />\r\n        <main className={classes.content}>{this.props.children}</main>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import React from \"react\";\r\nimport classes from \"./BuildControl.module.css\";\r\n\r\nconst BuildControl = props => {\r\n  return (\r\n    <div className={classes.BuildControl}>\r\n      <div className={classes.Label}>{props.label}</div>\r\n      <button\r\n        className={classes.Less}\r\n        onClick={props.ingredientRemoved}\r\n        disabled={props.disable}\r\n      >\r\n        Less\r\n      </button>\r\n      <button className={classes.More} onClick={props.ingredientAdded}>\r\n        More\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildControl;\r\n","import React from \"react\";\r\nimport BuildControl from \"./BuildControl/BuildControl\";\r\nimport classes from \"./BuildControls.module.css\";\r\n\r\nconst controls = [\r\n  { label: \"Salad\", type: \"salad\" },\r\n  { label: \"Balcon\", type: \"bacon\" },\r\n  { label: \"Cheese\", type: \"cheese\" },\r\n  { label: \"Meat\", type: \"meat\" },\r\n];\r\n\r\nconst BuildControls = (props) => {\r\n  return (\r\n    <div className={classes.BuildControls}>\r\n      <p>\r\n        Current Price: <strong>{props.price.toFixed(2)}</strong>\r\n      </p>\r\n      {controls.map((el) => {\r\n        return (\r\n          <BuildControl\r\n            label={el.label}\r\n            key={el.type}\r\n            ingredientAdded={() => props.ingredientAdded(el.type)}\r\n            ingredientRemoved={() => props.ingredientRemoved(el.type)}\r\n            disable={props.disable[el.type]}\r\n          />\r\n        );\r\n      })}\r\n      <button\r\n        className={classes.OrderButton}\r\n        disabled={!props.purchaseable}\r\n        onClick={props.ordered}>\r\n        {props.isAuth ? \"ORDER NOW\" : \"SIGN UP TO ORDER\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildControls;\r\n","import React, { Component } from \"react\";\r\nimport Aux from \"../../../hoc/Auxiliary\";\r\nimport Button from \"../../UI/Button/Button\";\r\n\r\nclass OrderSummary extends Component {\r\n  //This could be a functional component, don't have to be a class component.\r\n  UNSAVE_componentWillUpdate() {}\r\n  render() {\r\n    const ingredientSummary = Object.keys(this.props.ingredients).map(\r\n      (igKey) => {\r\n        return (\r\n          <li key={igKey}>\r\n            <span style={{ textTransform: \"capitalize\" }}>{igKey}</span>:{\" \"}\r\n            {this.props.ingredients[igKey]}\r\n          </li>\r\n        );\r\n      }\r\n    );\r\n\r\n    return (\r\n      <Aux>\r\n        <h3>Your Order</h3>\r\n        <p>A delicious burger with the following ingredients:</p>\r\n        <ul>{ingredientSummary}</ul>\r\n        <p>\r\n          <strong>Total Price: {this.props.price.toFixed(2)}</strong>\r\n        </p>\r\n        <p>Continue to Checkout?</p>\r\n        <Button btnType='Danger' clicked={this.props.purchaseCancelled}>\r\n          CANCEL\r\n        </Button>\r\n        <Button btnType='Success' clicked={this.props.purchaseContinued}>\r\n          CONTINUE\r\n        </Button>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OrderSummary;\r\n","import React, { Component } from \"react\";\r\nimport Aux from \"../../hoc/Auxiliary\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\n\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport * as actions from \"../../store/actions\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"../../axios-orders\";\r\n\r\nexport class BurgerBuilder extends Component {\r\n  state = {\r\n    purchasing: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.onInitIngredients();\r\n  }\r\n\r\n  updatedPurchaseState = (updatedIngredients) => {\r\n    const sum = Object.keys(updatedIngredients)\r\n      .map((igKey) => {\r\n        return updatedIngredients[igKey];\r\n      })\r\n      .reduce((sum, el) => sum + el, 0);\r\n    return sum > 0;\r\n  };\r\n\r\n  // addIngredientHandler = type => {\r\n  //   // const oldCount = this.state.ingredients[type];\r\n  //   // const updatedCount = oldCount + 1;\r\n  //   let updatedIngredients = { ...this.state.ingredients };\r\n  //   updatedIngredients[type] = updatedIngredients[type] + 1;\r\n  //   // console.log(ingredients);\r\n  //   const priceAddition = INGREDIENT_PRICES[type];\r\n  //   const oldPrice = this.state.totalPrice;\r\n  //   const newPrice = oldPrice + priceAddition;\r\n\r\n  //   // updatedDisable = Object.keys(updatedIngredients)\r\n  //   // .map(igkey => {\r\n  //   //   return updatedIngredients[igkey] > 0 :\r\n  //   // })\r\n\r\n  //   this.setState({\r\n  //     ingredients: updatedIngredients,\r\n  //     totalPrice: newPrice\r\n  //   });\r\n  //   this.updatedPurchaseState(updatedIngredients);\r\n  // };\r\n\r\n  // removeIngredientHandler = type => {\r\n  //   // const oldCount = this.state.ingredients[type];\r\n  //   // const updatedCount = oldCount + 1;\r\n  //   let updatedIngredients = {\r\n  //     ...this.state.ingredients\r\n  //   };\r\n  //   updatedIngredients[type] = updatedIngredients[type] - 1;\r\n  //   // console.log(ingredients);\r\n  //   const priceAddition = INGREDIENT_PRICES[type];\r\n  //   const oldPrice = this.state.totalPrice;\r\n  //   const newPrice = oldPrice - priceAddition;\r\n\r\n  //   this.setState({\r\n  //     ingredients: updatedIngredients,\r\n  //     totalPrice: newPrice.toFixed(2)\r\n  //   });\r\n  //   this.updatedPurchaseState(updatedIngredients);\r\n  // };\r\n\r\n  purchaseHandler = () => {\r\n    if (this.props.isAuthenticated) {\r\n      this.setState({ purchasing: true });\r\n    } else {\r\n      this.props.onSetRedirectPath(\"/checkout\");\r\n      this.props.history.push(\"/auth\");\r\n    }\r\n  };\r\n  purchaseCancelHandler = () => this.setState({ purchasing: false });\r\n  purcheseContinueHandler = () => {\r\n    // const queryParams = [];\r\n    // // eslint-disable-next-line no-unused-vars\r\n    // for (let i in this.props.ings) {\r\n    //   queryParams.push(\r\n    //     encodeURIComponent(i) + \"=\" + encodeURIComponent(this.props.ings[i])\r\n    //   );\r\n    // }\r\n    // queryParams.push(\"price=\" + this.props.price);\r\n    // const queryString = queryParams.join(\"&\");\r\n    // this.props.history.push({\r\n    //   pathname: \"/checkout\",\r\n    //   search: \"?\" + queryString\r\n    // });\r\n    this.props.onInitPurchase();\r\n\r\n    this.props.history.push(\"/checkout\");\r\n  };\r\n\r\n  render() {\r\n    const disableInfo = {\r\n      ...this.props.ings,\r\n    };\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    for (let key in disableInfo) {\r\n      disableInfo[key] = disableInfo[key] <= 0;\r\n    }\r\n    let orderSummary = null;\r\n\r\n    let burger = this.props.error ? (\r\n      <p> Ingredients can't be loaded!</p>\r\n    ) : (\r\n      <Spinner />\r\n    );\r\n    if (this.props.ings) {\r\n      burger = (\r\n        <Aux>\r\n          <Burger ingredients={this.props.ings} />\r\n          <BuildControls\r\n            ingredientAdded={this.props.onIngredientAdded}\r\n            ingredientRemoved={this.props.onIngredientRemoved}\r\n            disable={disableInfo}\r\n            price={this.props.price}\r\n            purchaseable={this.updatedPurchaseState(this.props.ings)}\r\n            isAuth={this.props.isAuthenticated}\r\n            ordered={this.purchaseHandler}\r\n          />\r\n        </Aux>\r\n      );\r\n\r\n      orderSummary = (\r\n        <OrderSummary\r\n          ingredients={this.props.ings}\r\n          purchaseCancelled={this.purchaseCancelHandler}\r\n          purchaseContinued={this.purcheseContinueHandler}\r\n          price={this.props.price}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Aux>\r\n        <Modal\r\n          show={this.state.purchasing}\r\n          modalClosed={this.purchaseCancelHandler}>\r\n          {orderSummary}\r\n        </Modal>\r\n        {burger}\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ings: state.burgerBuilder.ingredients,\r\n    price: state.burgerBuilder.totalPrice,\r\n    error: state.burgerBuilder.error,\r\n    isAuthenticated: state.auth.token !== null,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n    onIngredientRemoved: (ingName) =>\r\n      dispatch(actions.removeIngredient(ingName)),\r\n    onInitIngredients: () => dispatch(actions.initIngredients()),\r\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n    onSetRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(BurgerBuilder, axios));\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../store/actions/index\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    this.props.onLogout();\r\n  }\r\n  render() {\r\n    return <Redirect to='/' />;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogout: () => dispatch(actions.logout())\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import React, { Component } from \"react\";\r\n\r\nconst asyncComponent = (importComponent) => {\r\n  return class extends Component {\r\n    state = {\r\n      component: null,\r\n    };\r\n\r\n    componentDidMount() {\r\n      importComponent().then((cmp) => {\r\n        this.setState({ component: cmp.default });\r\n      });\r\n    }\r\n\r\n    render() {\r\n      const C = this.state.component;\r\n      return C ? <C {...this.props} /> : null;\r\n    }\r\n  };\r\n};\r\n\r\nexport default asyncComponent;\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\n\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\n\nimport Logout from \"./containers/Auth/Logout/Logout\";\nimport * as actions from \"./store/actions/index\";\nimport asyncComponent from \"./hoc/asyncComponent/asyncComponent\";\n\nconst asyncCheckout = asyncComponent(() => {\n  return import(\"./containers/Checkout/Checkout\");\n});\n\nconst asynOrders = asyncComponent(() => {\n  return import(\"./containers/Orders/Orders\");\n});\n\nconst asynAuth = asyncComponent(() => {\n  return import(\"./containers/Auth/Auth\");\n});\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n  render() {\n    let routes = (\n      <Switch>\n        <Route path='/auth' component={asynAuth} />\n        <Route path='/' exact component={BurgerBuilder} />\n        <Redirect to='/' />\n      </Switch>\n    );\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path='/checkout' component={asyncCheckout} />\n          <Route path='/orders' component={asynOrders} />\n          <Route path='/logout' component={Logout} />\n          <Route path='/auth' component={asynAuth} />\n          <Route path='/' exact component={BurgerBuilder} />\n          <Redirect to='/' />\n        </Switch>\n      );\n    }\n    return (\n      <div>\n        <Layout>{routes}</Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\n  };\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport burgerBuilderReducer from \"./store/reducers/burgerBuilder\";\nimport orderReducer from \"./store/reducers/order\";\nimport authReducer from \"./store/reducers/auth\";\nimport thunk from \"redux-thunk\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer,\n});\nconst composeEnhancers =\n  process.env.NODE_ENV === \"development\"\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : null || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}